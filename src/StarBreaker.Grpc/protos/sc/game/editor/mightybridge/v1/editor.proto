syntax = "proto3";

package sc.game.editor.mightybridge.v1;

import "sc/game/editor/mightybridge/v1/transforms.proto";
import "sc/game/editor/mightybridge/v1/houdini.proto";
import "google/protobuf/descriptor.proto";

message MIGHTYBRIDGEVEDITORVERSIONPLACEHOLDER {
  string force_version_update = 4;
}

message EditorGuid {
  string value = 1;
  string original_layer_path = 2;
}

message EditorTag {
  string guid = 1;
  string name = 2;
  string fullname = 3;
}

message EditorTagList {
  repeated EditorTag tags = 1;
}

message EditorLayer {
  EditorGuid guid = 1;
  string name = 2;
  string layer_path = 3;
}

message EditorRGBColor {
  int32 r = 1;
  int32 g = 2;
  int32 b = 3;
}

message EditorArrayObjectBaseInfo {
  repeated EditorObjectBaseInfo objects = 1;
}

message EditorSpawnParameters {
  EditorLayer layer = 1;
  EditorGuid hto_guid = 2;
  string object_name = 3;
  Transformf transform = 4;
  EditorRGBColor color = 5;
  string tint_palette_path = 6;
  string material_path = 7;
  repeated EditorProperty properties = 8;
}

message EditorSpawnObjectCommand {
  EditorSpawnParameters spawn_parameters = 1;
  string object_type = 2;
  string object_sub_type = 3;
}

message EditorSpawnObjectResult {
  EditorGuid new_guid = 1;
}

message EditorSpawnBrushCommand {
  EditorSpawnParameters spawn_parameters = 1;
  string brush_path = 2;
}

message EditorSpawnBrushResult {
  EditorGuid new_guid = 1;
}

message EditorSpawnObjectContainerCommand {
  EditorSpawnParameters spawn_parameters = 1;
  string object_container_path = 2;
}

message EditorSpawnObjectContainerResult {
  EditorGuid new_guid = 1;
}

message EditorEntityBoolParameter {
  string path = 1;
  bool value = 2;
}

message EditorEntityFloatParameter {
  string path = 1;
  float value = 2;
}

message EditorEntityIntParameter {
  string path = 1;
  int32 value = 2;
}

message EditorEntityStringParameter {
  string path = 1;
  string value = 2;
}

message EditorObjectBaseInfo {
  EditorGuid guid = 1;
  string type = 2;
  string name = 3;
  Transformf transform = 4;
  int32 lowest_lod_level = 5;
  int32 highest_lod_level = 6;
  string sub_type = 7;
}

message EditorMesh {
  oneof message {
    EditorGeometry geometry = 1;
    EditorSubObjects sub_objects = 2;
  }
  int32 lod_level = 3;
  float lod_range_factor = 4;
}

message EditorSubObjects {
  repeated EditorMeshSubObject mesh_sub_objects = 1;
  string material_path = 2;
}

message EditorGeometry {
  repeated float positions = 1;
  repeated int32 vertices = 2;
  repeated int32 triangles = 3;
  repeated float colors = 4;
  repeated float uvs = 5;
  repeated float normals = 6;
  string material_path = 7;
  repeated EditorMeshSubset sub_sets = 8;
  string name = 9;
}

message EditorSpawnEntityCommand {
  EditorSpawnParameters spawn_parameters = 1;
  string entity_path = 2;
  repeated EditorEntityBoolParameter bool_parameters = 3;
  repeated EditorEntityFloatParameter float_parameters = 4;
  repeated EditorEntityIntParameter int_parameters = 5;
  repeated EditorEntityStringParameter string_parameters = 6;
}

message EditorSpawnEntityResult {
  EditorGuid new_guid = 1;
}

message EditorSpawnPrefabCommand {
  EditorSpawnParameters spawn_parameters = 1;
  string prefab_name = 2;
  string prefab_library_name = 3;
}

message EditorSpawnPrefabResult {
  EditorGuid new_guid = 1;
}

message EditorSpawnAreaBoxCommand {
  EditorSpawnParameters spawn_parameters = 1;
  Vec3f size = 2;
  bool filled = 3;
}

message EditorSpawnAreaBoxResult {
  EditorGuid new_guid = 1;
}

message EditorSpawnNavigationAreaCommand {
  EditorSpawnParameters spawn_parameters = 1;
  repeated Vec3f shape = 2;
  float height = 3;
}

message EditorSpawnNavigationAreaResult {
  EditorGuid new_guid = 1;
}

message EditorSpawnVisAreaCommand {
  EditorSpawnParameters spawn_parameters = 1;
  repeated Vec3f shape = 2;
  bool is_portal = 3;
  float height = 4;
}

message EditorSpawnVisAreaResult {
  EditorGuid new_guid = 1;
}

message EditorClearHtoSpawnedObjectsCommand {
  EditorGuid hto_guid = 1;
}

message EditorRemoveObjectsCommand {
  repeated EditorGuid object_guids = 1;
}

message EditorPrintCommand {
  string text = 1;
  EditorLogLevel log_level = 2;
  string context = 3;
}

message EditorClearLayerCommand {
  EditorLayer layer = 1;
}

message EditorReloadLayerCommand {
  EditorLayer layer = 1;
}

message EditorBoundingBox {
  Vec3f min = 1;
  Vec3f max = 2;
  Transformf transform = 3;
}

message EditorGetCameraTransformCommand {}

message EditorGetCameraTransformResult {
  Transformf transform = 1;
}

message EditorGetObjectBoundingBoxCommand {
  EditorGuid object_guid = 1;
}

message EditorGetObjectBoundingBoxResult {
  EditorBoundingBox oobb = 1;
  EditorBoundingBox aabb = 2;
}

message EditorGetBrushBoundingBoxCommand {
  string brush_path = 1;
}

message EditorGetBrushBoundingBoxResult {
  EditorBoundingBox bounding_box = 1;
}

message EditorSplinePoint {
  Transformf transform = 1;
  float length = 2;
  float pre_tension = 3;
  float post_tension = 4;
  bool custom_tangent_rotation = 5;
  RotationMode rotation_mode = 6;
  Quatf entity_rotation = 7;
  float speed = 8;
  string trigger_name = 9;
  bool force_rotation = 10;

  enum RotationMode {
    ROTATION_MODE_UNSPECIFIED = 0;
    ROTATION_MODE_USE_SPLINE = 1;
    ROTATION_MODE_OVERWRITE = 2;
  }
}

message EditorSpawnSplineCommand {
  EditorSpawnParameters spawn_parameters = 1;
  repeated EditorSplinePoint spline_points = 2;
}

message EditorSpawnSplineResult {
  EditorGuid new_guid = 1;
}

message EditorGetSplinePointsCommand {
  EditorGuid object_guid = 1;
}

message EditorGetSplinePointsResult {
  repeated EditorSplinePoint spline_points = 1;
  EditorObjectBaseInfo object_info = 2;
}

message EditorSetSplinePointsCommand {
  EditorGuid object_guid = 1;
  repeated EditorSplinePoint spline_points = 2;
}

message EditorGetSelectedObjectsCommand {}

message EditorGetSelectedObjectsResult {
  repeated EditorObjectBaseInfo objects = 1;
}

message EditorGenerateDebugMeshCommand {
  EditorGuid existing_debug_mesh_guid = 1;
  EditorGuid parent_guid = 2;
  Transformf transform = 3;
  string label = 4;
  EditorGuid redirect_to_obj_guid = 5;
  EditorHoudiniMesh houdini_mesh = 6;
}

message EditorGenerateDebugMeshResult {
  EditorGuid new_mesh_guid = 1;
}

message EditorClearDebugMeshesCommand {
  EditorGuid parent_guid = 1;
  EditorGuid debug_mesh_guid = 2;
}

message EditorGetObjectsInVolumeCommand {
  EditorBoundingBox bounding_box = 1;
  bool fully_included = 2;
}

message EditorGetObjectsInVolumeResult {
  repeated EditorObjectBaseInfo bounded_objects = 1;
}

message EditorGetTerrainGeometryCommand {
  Vec3f direction = 1;
  float radius = 2;
  uint32 lod = 3;
  uint32 payload_max_size = 4;
}

message EditorGetTerrainGeometryResult {
  float terrain_radius = 1;
  float ocean_radius = 2;
  bool is_ocean_frozen = 3;
  bool is_gas_giant = 4;
  repeated float positions = 5;
  repeated uint32 ground_colors = 6;
  repeated uint32 temperatures = 7;
  repeated uint32 humidities = 8;
  repeated uint32 triangles = 9;
}

message EditorGetTerrainInfoCommand {
  bool get_elevation = 1;
  bool get_ground_color = 2;
  bool get_temperature = 3;
  bool get_humidity = 4;
  repeated float directions = 5;
}

message EditorGetTerrainInfoResult {
  float terrain_radius = 1;
  float ocean_radius = 2;
  bool is_ocean_frozen = 3;
  bool is_gas_giant = 4;
  repeated float elevations = 5;
  repeated uint32 ground_colors = 6;
  repeated uint32 temperatures = 7;
  repeated uint32 humidities = 8;
}

message EditorGetBiomeInstancesCommand {
  Vec3f direction = 1;
  float cull_radius = 2;
  bool get_brushes = 3;
  bool get_ground_covers = 4;
}

message EditorGetBiomeInstancesResult {
  Vec3w instances_pivot = 1;
  repeated Model brush_models = 2;
  repeated BrushInstance brush_instances = 3;
  repeated Model ground_cover_models = 4;
  repeated GroundCoverInstance ground_cover_instances = 5;

  message Model {
    string brush_path = 1;
    string material_override_path = 2;
  }
  message BrushInstance {
    uint32 model_index = 1;
    Transformf transform = 2;
  }
  message GroundCoverInstance {
    uint32 model_index = 1;
    Transformf transform = 2;
  }
}

message EditorGetGeometryCommand {
  EditorGuid object_guid = 1;
  int32 cut = 2;
  int32 lod_level = 3;
  bool is_colors_wanted = 4;
  bool is_uvs_wanted = 5;
  bool is_materials_wanted = 6;
  bool is_sub_objects_wanted = 7;
  bool apply_local_transforms_to_vertex = 8;
}

message EditorGetGeometryResult {
  EditorObjectBaseInfo base_info = 1;
  EditorHoudiniMesh houdini_mesh = 2;
}

message EditorMeshSubset {
  int32 material_id = 1;
  string material_name = 2;
  int32 index = 3;
  int32 first_index = 4;
  int32 number_indices = 5;
  int32 first_vertex = 6;
  int32 number_vertex = 7;
}

message EditorMeshSubObject {
  int32 index = 1;
  string name = 2;
  string material_name = 3;
  EditorGeometry geometry = 4;
}

message EditorBrush {
  string material_path = 1;
  int32 sub_object_count = 2;
  repeated EditorMeshSubObject sub_objects = 3;
}

message EditorEntity {
  bool is_object_container = 1;
}

message EditorPrefab {
  int32 sub_object_count = 1;
  string library_name = 2;
  string library_file_name = 3;
  repeated EditorEntity entities = 4;
  repeated EditorBrush brushes = 5;
  repeated EditorPrefab prefabs = 6;
  repeated EditorBrush designer_solids = 7;
}

message EditorGetHierarchyCommand {
  EditorGuid object_guid = 1;
  LevelType level = 2;

  enum LevelType {
    LEVEL_TYPE_UNSPECIFIED = 0;
    LEVEL_TYPE_OBJECT = 1;
    LEVEL_TYPE_SUBOBJECT = 2;
    LEVEL_TYPE_MESHOBJECT = 3;
  }
}

message SharpResult {
  string message = 1;
  bytes data = 2;
}

message EditorGetOCHierarchyCommand {
  string socpak_path = 1;
  string element_filter = 2;
}

message EditorGetOCHierarchyResult {
  EditorHierarchyNode root = 1;
}

message EditorGetHierarchyResult {
  EditorHierarchyNode root = 1;
}

message EditorHierarchyNode {
  EditorObjectBaseInfo base = 1;
  EditorObjectAdditionalInfo additional_info = 2;
  repeated EditorHierarchyNode children = 3;
}

message EditorObjectAdditionalInfo {
  oneof type {
    EditorBrush brush = 1;
    EditorEntity entity = 2;
    EditorPrefab prefab = 3;
    EditorLayer layer = 5;
  }
  repeated EditorObjectVariable attributes = 4;
  string additional_info = 6;
}

message EditorSelectObjectsByGUIDsCommand {
  repeated EditorGuid objects_guids = 1;
  Mode mode = 2;

  enum Mode {
    MODE_UNSPECIFIED = 0;
    MODE_APPEND = 1;
    MODE_REPLACE = 2;
  }
}

message EditorCookHTOCommand {
  EditorGuid hto_guid = 1;
  repeated HoudiniParmValue hda_parameters = 2;
}

message EditorSpawnHTOCommand {
  EditorSpawnParameters spawn_parameters = 1;
  string hda_name = 2;
  repeated HoudiniParmValue hda_parameters = 3;
  bool cook_on_create = 4;
  string hda_version = 5;
}

message EditorSpawnHTOResult {
  EditorGuid new_hto_guid = 1;
}

message EditorRefreshHTOParamsCommand {
  EditorGuid hto_guid = 1;
  repeated HoudiniParmValue hda_parameters = 2;
}

message EditorReparentHTOCommand {
  EditorGuid child_guid = 1;
  EditorGuid parent_guid = 2;
}

message EditorGetHTONodePathCommand {
  EditorGuid hto_guid = 1;
}

message EditorGetHTONodePathResult {
  string hto_path = 1;
}

message EditorRenameLayerCommand {
  EditorLayer layer = 1;
  string new_name = 2;
}

message EditorCreateLayerCommand {
  EditorLayerProperties layer_properties = 1;
}

message EditorCreateLayerResult {
  EditorLayer layer = 1;
  bool already_existing_layer = 2;
}

message EditorDeleteLayerCommand {
  EditorLayer layer = 1;
}

message EditorHideShowLayerCommand {
  EditorLayer layer = 1;
  bool is_visible = 2;
}

message EditorReparentLayerCommand {
  EditorLayer layer = 1;
  EditorLayer new_parent_layer = 2;
}

message EditorGetObjectsInLayerCommand {
  EditorLayer layer = 1;
  bool include_sub_layers = 2;
}

message EditorGetObjectsInLayerResult {
  repeated EditorObjectBaseInfo objects = 1;
}

message EditorMoveObjectsToLayerCommand {
  EditorLayer layer = 1;
  repeated EditorGuid object_guids = 2;
}

message EditorSetActiveLayerCommand {
  EditorLayer layer = 1;
}

message EditorGetActiveLayerCommand {}

message EditorGetActiveLayerResult {
  EditorLayer layer = 1;
}

message EditorExpandLayerCommand {
  EditorLayer layer = 1;
}

message EditorCollapseLayerCommand {
  EditorLayer layer = 1;
}

message EditorSaveLayerCommand {
  EditorLayer layer = 1;
  bool is_recursive = 2;
}

message EditorImportLayerCommand {
  string layer_path = 1;
}

message EditorImportLayerResult {
  EditorLayer layer = 1;
}

message EditorSpawnDecalCommand {
  EditorSpawnParameters spawn_parameters = 1;
  int32 sort_priority = 2;
  int32 view_dist_ratio = 3;
  float bounding_box_z_scale = 4;
  bool affects_this_area_only = 5;
}

message EditorSpawnDecalResult {
  EditorGuid new_guid = 1;
}

message EditorOpenPrefabCommand {
  EditorGuid object_guid = 1;
}

message EditorClosePrefabCommand {
  EditorGuid object_guid = 1;
}

message EditorTestCommand {
  EditorGuid guid = 1;
  string message = 2;
  Transformf transform = 3;
  repeated float numbers = 4;
  repeated int32 bytes = 5;
}

message EditorTestResult {
  EditorGuid guid = 1;
  string message = 2;
  Transformf transform = 3;
  repeated float numbers = 4;
  repeated int32 bytes = 5;
}

message EditorOpenObjectContainerCommand {
  EditorGuid guid = 1;
}

message EditorOpenObjectContainerResult {
  EditorLayer layer = 1;
  repeated EditorObjectBaseInfo objects = 2;
}

message EditorCloseObjectContainerCommand {
  EditorGuid guid = 1;
  bool save_and_export = 2;
  bool force_overwrite = 3;
}

message EditorCloseObjectContainerResult {
  repeated string files_modified = 1;
}

message EditorExportLayerToObjectContainerCommand {
  EditorGuid layer_guid = 1;
  string socpak_path = 2;
  bool set_layer_as_oc = 3;
}

message EditorGenerateCGFCommand {
  string cgf_path = 1;
  repeated EditorHoudiniMesh houdini_meshes = 2;
  EditorPhysics object_physics = 4;
}

message EditorSetGeometryInstancerCommand {
  EditorGuid entity_guid = 1;
  Compression compression = 2;
  Rendering rendering = 3;
  bool enable_shadows = 4;
  bool enable_physics = 5;
  string geometry_path = 6;
  string material_path = 7;
  repeated Vec3f positions = 8;
  repeated Quatf rotations = 9;
  repeated float scales = 10;

  enum Rendering {
    RENDERING_UNSPECIFIED = 0;
    RENDERING_DEFAULT = 1;
    RENDERING_VEGETATION = 2;
    RENDERING_DECAL = 3;
  }

  enum Compression {
    COMPRESSION_UNSPECIFIED = 0;
    COMPRESSION_DEFAULT = 1;
    COMPRESSION_REFERENCE = 2;
    COMPRESSION_CUBE_LIST = 3;
  }
}

message EditorGetGeometryInstancerCommand {
  EditorGuid entity_guid = 1;
}

message EditorGetGeometryInstancerResult {
  string geometry_path = 1;
  string material_path = 2;
  repeated Vec3f positions = 3;
  repeated Quatf rotations = 4;
  repeated float scales = 5;
}

message EditorGetCGFInfoCommand {
  string cgf_path = 1;
  bool apply_local_transforms_to_vertex = 2;
}

message EditorGetCGFInfoResult {
  string name = 1;
  EditorHoudiniMesh houdini_mesh = 2;
}

message EditorGetLayerHierarchyCommand {
  EditorLayer layer = 1;
}

message EditorGetLayerHierarchyResult {
  repeated EditorHierarchyNode root_layers = 1;
}

message EditorSpawnShapeObjectCommand {
  string object_type = 1;
  EditorSpawnParameters spawn_parameters = 2;
  repeated Vec3f shape = 3;
}

message EditorSpawnShapeObjectResult {
  EditorGuid new_guid = 1;
}

message EditorGetObjectShapeCommand {
  EditorGuid object_guid = 1;
}

message EditorGetObjectShapeResult {
  repeated Vec3f shape = 1;
  EditorObjectBaseInfo object_info = 2;
}

message EditorSetObjectShapeCommand {
  EditorGuid object_guid = 1;
  Vec3f pos = 2;
  repeated Vec3f shape = 3;
}

message EditorSetObjectShapeResult {}

message EditorExpandObjectCommand {
  EditorGuid object_guid = 1;
  bool propagate = 2;
  int32 propagate_depth = 3;
}

message EditorExpandObjectResult {}

message EditorCollapseObjectCommand {
  EditorGuid object_guid = 1;
}

message EditorCollapseObjectResult {}

message EditorEntityPropertyValue {
  oneof value {
    bool bool_value = 1;
    float float_value = 2;
    int32 int_value = 3;
    string string_value = 4;
    EditorGuid guid_value = 5;
  }
}

message EditorEntityProperty {
  string path = 1;
  EditorEntityPropertyValue value = 2;
  EditorEntityPropertyValue default_value = 3;
}

message EditorEntityArrayProperty {
  string path = 1;
  repeated EditorEntityPropertyValue value = 2;
}

message EditorEntityEnumProperty {
  string path = 1;
  repeated string labels = 2;
  int32 index = 3;
}

message EditorObjectProperty {
  oneof value {
    string name = 1;
    string tint_palette_path = 2;
    string material_path = 3;
    Transformf transform = 4;
    EditorGuid layer_guid = 5;
    EditorGuid hto_guid = 6;
    EditorRGBColor color = 7;
  }
}

message EditorObjectTagList {
  repeated EditorTagList tag_lists = 1;
}

message EditorObjectVariable {
  string name = 1;
  oneof value {
    bool bool_value = 2;
    float float_value = 3;
    Vec2f vec2_value = 4;
    Vec3f vec3_value = 5;
    Vec4f vec4_value = 6;
    Quatf quat_value = 7;
    string string_value = 8;
    int32 int_value = 9;
    EditorObjectTagList tag_list_value = 10;
  }
}

message EditorHTOProperty {
  HTOProperty name = 1;
  oneof value {
    EditorObjectBaseInfo object_value = 2;
    EditorArrayObjectBaseInfo objects_value = 3;
    string string_value = 4;
    bool bool_value = 5;
    float float_value = 6;
    int32 int_value = 7;
  }

  enum HTOProperty {
    HTO_PROPERTY_UNSPECIFIED = 0;
    HTO_PROPERTY_PARENT_HTO = 1;
    HTO_PROPERTY_CHILDREN_HTO = 2;
    HTO_PROPERTY_SPAWNED_OBJECTS = 3;
    HTO_PROPERTY_SPAWNED_DEBUG_MESHS = 4;
    HTO_PROPERTY_HOUDINI_NODE_PATH = 5;
    HTO_PROPERTY_IS_DIRTY = 6;
    HTO_PROPERTY_DELETE_CHILDREN_HTO = 7;
    HTO_PROPERTY_DELETE_SPAWNED_OBJECTS = 8;
    HTO_PROPERTY_HDA_NAME = 9;
    HTO_PROPERTY_AUTOCOOK = 10;
    HTO_PROPERTY_AUTOCOOK_DELAY = 11;
    HTO_PROPERTY_HDA_VERSION = 12;
  }
}

message EditorEntityLink {
  string name = 1;
  EditorGuid object_guid = 2;
}

message EditorEnergyLink {
  string name = 1;
  EditorGuid object_guid = 2;
  string pipe_class = 3;
}

message EditorInteractionLink {
  string name = 1;
  EditorGuid object_guid = 2;
  uint32 source_slot_index = 3;
  uint32 target_slot_index = 4;
}

message EditorEntityLinksProperty {
  EntityLinksPropertySetOption set_entity_links_option = 1;
  repeated EditorEntityLink entity_links = 2;
  EntityLinksPropertySetOption set_energy_links_option = 3;
  repeated EditorEnergyLink energy_links = 4;
  EntityLinksPropertySetOption set_interaction_links_option = 5;
  repeated EditorInteractionLink interaction_links = 6;

  enum EntityLinksPropertySetOption {
    ENTITY_LINKS_PROPERTY_SET_OPTION_UNSPECIFIED = 0;
    ENTITY_LINKS_PROPERTY_SET_OPTION_IGNORE = 1;
    ENTITY_LINKS_PROPERTY_SET_OPTION_ADD = 2;
    ENTITY_LINKS_PROPERTY_SET_OPTION_REPLACE = 3;
  }
}

message EditorPrefabProperty {
  PrefabProperty name = 1;
  oneof value {
    EditorArrayObjectBaseInfo objects_value = 2;
    string string_value = 3;
    bool bool_value = 4;
  }

  enum PrefabProperty {
    PREFAB_PROPERTY_UNSPECIFIED = 0;
    PREFAB_PROPERTY_PATH = 1;
    PREFAB_PROPERTY_SPAWNED_OBJECTS = 2;
    PREFAB_PROPERTY_IS_OPEN = 3;
  }
}

message EditorProperty {
  oneof property {
    EditorObjectProperty object_property = 1;
    EditorObjectVariable object_variable = 2;
    EditorEntityProperty entity_property = 3;
    EditorEntityArrayProperty entity_array_property = 4;
    EditorEntityEnumProperty entity_enum_property = 5;
    EditorHTOProperty hto_property = 6;
    HoudiniParmValue hda_parameter = 7;
    EditorEntityLinksProperty entity_links_property = 8;
    EditorPrefabProperty prefab_property = 9;
  }
}

message EditorShaderProperty {
  repeated Shader properties = 1;

  message Shader {
    string category_name = 1;
    string category_human_name = 2;
    string display_name = 3;
    string display_human_name = 4;
    oneof value {
      string string_value = 5;
      float float_value = 6;
      Vec3f rgb_value = 7;
      int32 int_value = 9;
      int32 short_value = 10;
      Vec3f vector_value = 11;
      bool bool_value = 12;
      uint32 uint_value = 13;
    }
  }
}

message EditorTextureProperty {
  repeated Texture properties = 1;

  message Texture {
    string display_name = 1;
    string path = 2;
  }
}

message EditorShaderLayers {
  repeated Layer properties = 1;

  message Layer {
    string category_name = 1;
    string category_human_name = 2;
    string display_name = 3;
    string display_human_name = 4;
    oneof value {
      string string_value = 5;
      float float_value = 6;
      EditorRGBColor rgb_value = 7;
      Vec3f vec3_value = 8;
      uint32 uint_value = 9;
      int32 byte_value = 10;
      int32 short_value = 11;
      int32 int_value = 12;
    }
  }
}

message EditorVertexDeformation {
  int32 type = 1;
  Vec3f noise_scale = 2;
  float wave_length = 3;
  WaveInfo wave_x = 4;
  WaveInfo wave_y = 5;
  WaveInfo wave_z = 6;
  WaveInfo wave_w = 7;

  message WaveInfo {
    int32 type = 1;
    float level = 2;
    float amplitude = 3;
    float phase = 4;
    float frequency = 5;
  }
}

message EditorShaderGenParams {
  repeated GenParams properties = 1;

  message GenParams {
    string display_name = 1;
    bool value = 2;
  }
}

message EditorMaterialSettings {
  Setting name = 1;
  string property = 2;

  enum Setting {
    MATERIAL_PROPERTY_TEMPLATE_MATERIAL = 0;
    MATERIAL_PROPERTY_SHADER = 1;
    MATERIAL_PROPERTY_SURFACE_TYPE = 2;
  }
}

message EditorMaterialOpacitySettings {
  Setting name = 1;
  oneof property {
    float float_value = 2;
    bool bool_value = 3;
  }

  enum Setting {
    MATERIAL_PROPERTY_OPACITY = 0;
    MATERIAL_PROPERTY_ALPHA_TEST = 1;
    MATERIAL_PROPERTY_ADDITIVE = 2;
    MATERIAL_PROPERTY_MULTIPLY = 3;
    MATERIAL_PROPERTY_DISABLE_SPECULAR_BLENDING = 4;
  }
}

message EditorMaterialLightingSettings {
  Setting name = 1;
  oneof property {
    EditorRGBColor rgb_value = 2;
    float float_value = 3;
  }

  enum Setting {
    MATERIAL_PROPERTY_DIFFUSE_COLOR = 0;
    MATERIAL_PROPERTY_SPECULAR_COLOR = 1;
    MATERIAL_PROPERTY_GLOSSINESS = 2;
    MATERIAL_PROPERTY_EMISSIVE_COLOR = 3;
    MATERIAL_PROPERTY_GLOW_AMOUNT = 4;
  }
}

message EditorMaterialAdvanced {
  Advanced name = 1;
  oneof property {
    bool bool_value = 2;
    string string_value = 3;
  }

  enum Advanced {
    MATERIAL_PROPERTY_TWO_SIDED = 0;
    MATERIAL_PROPERTY_NO_SHADOW = 1;
    MATERIAL_PROPERTY_FORCE_SHADOW = 2;
    MATERIAL_PROPERTY_LINKED_GLOW = 3;
    MATERIAL_PROPERTY_HIDE_ON_BREAK = 4;
    MATERIAL_PROPERTY_MATERIAL_LINK = 5;
    MATERIAL_PROPERTY_PROPAGATE_MATERIAL_SETTINGS = 6;
    MATERIAL_PROPERTY_PROPAGATE_OPACITY_SETTINGS = 7;
    MATERIAL_PROPERTY_PROPAGATE_LIGHTING_SETTINGS = 8;
    MATERIAL_PROPERTY_PROPAGATE_ADVANCED_SETTINGS = 9;
    MATERIAL_PROPERTY_PROPAGATE_TEXTURE_MAPS = 10;
    MATERIAL_PROPERTY_PROPAGATE_SHADER_PARAMS = 11;
    MATERIAL_PROPERTY_PROPAGATE_SHADER_GENERATION = 12;
    MATERIAL_PROPERTY_PROPAGATE_VERTEX_DEFORMATION = 13;
  }
}

message EditorMaterialProperty {
  MaterialProperty category = 1;
  oneof property {
    EditorMaterialAdvanced advanced = 2;
    EditorMaterialLightingSettings lighting = 3;
    EditorMaterialOpacitySettings opacity = 4;
    EditorMaterialSettings setting = 5;
    EditorShaderProperty shader = 6;
    EditorTextureProperty texture = 7;
    EditorShaderLayers shader_layers = 8;
    EditorVertexDeformation vertex_deformation = 9;
    EditorShaderGenParams shade_generation_params = 10;
  }

  enum MaterialProperty {
    MATERIAL_PROPERTY_MATERIAL_SETTING = 0;
    MATERIAL_PROPERTY_LIGHTING_SETTING = 1;
    MATERIAL_PROPERTY_OPACITY_SETTING = 2;
    MATERIAL_PROPERTY_ADVANCED_SETTING = 3;
    MATERIAL_PROPERTY_TEXTURE = 4;
    MATERIAL_PROPERTY_SHADER_PARAMS = 5;
    MATERIAL_PROPERTY_SHADER_GENERATION_PARAMS = 6;
    MATERIAL_PROPERTY_SHADER_LAYERS = 7;
    MATERIAL_PROPERTY_VERTEX_DEFORMATION = 8;
  }
}

message EditorMaterial {
  string material_path = 1;
  string name = 2;
  repeated EditorMaterial sub_materials = 3;
  repeated EditorMaterialProperty properties = 4;
}

message EditorGetMaterialPropertiesCommand {
  string material_path = 1;
  EditorGuid material_guid = 2;
  repeated EditorMaterialProperty properties = 3;
}

message EditorGetMaterialPropertiesResult {
  EditorMaterial material = 1;
}

message EditorSetPropertiesCommand {
  EditorGuid object_guid = 1;
  repeated EditorProperty properties = 2;
}

message EditorGetPropertiesCommand {
  EditorGuid object_guid = 1;
  repeated EditorProperty properties = 2;
}

message EditorGetPropertiesResult {
  EditorObjectBaseInfo object_info = 1;
  repeated EditorProperty properties = 2;
}

message EditorGetAllPropertiesCommand {
  EditorGuid object_guid = 1;
}

message EditorGetAllPropertiesResult {
  EditorObjectBaseInfo object_info = 1;
  repeated EditorProperty properties = 2;
}

message EditorGetCGAPathsFromEntityCommand {
  EditorGuid object_guid = 1;
}

message EditorGetCGAPathsFromEntityResult {
  repeated string cgfs = 1;
  repeated string cgas = 2;
}

message EditorLayerProperties {
  EditorLayer layer = 1;
  EditorLayer parent_layer = 2;
  bool external = 3;
  bool exportable = 4;
  bool frozen = 5;
  bool visible = 6;
  EditorRGBColor color = 7;
  bool have_physics = 8;
  string prefab_path = 9;
  bool modified = 10;
  bool object_container = 11;
  bool lod_merge_layer_flag = 12;
  float lod_merge_max_view_dist = 13;
  float lod_merge_max_mem_usage = 14;
  float lod_merge_combine_range_factor = 15;
  bool default_loaded = 16;
  string object_container_layer_type = 17;
  repeated float lod_merge_mem_usage_dist_lvls = 18;
}

message EditorGetLayerPropertiesCommand {
  EditorLayer layer = 1;
  bool parent_layer = 2;
  bool external = 3;
  bool exportable = 4;
  bool frozen = 5;
  bool visible = 6;
  bool color = 7;
  bool have_physics = 8;
  bool prefab_path = 9;
  bool modified = 10;
  bool object_container = 11;
  bool lod_merge_layer_flag = 12;
  bool lod_merge_max_view_dist = 13;
  bool lod_merge_max_mem_usage = 14;
  bool lod_merge_combine_range_factor = 15;
  bool default_loaded = 16;
  bool object_container_layer_type = 17;
  bool lod_merge_mem_usage_dist_lvls = 18;
}

message EditorGetLayerPropertiesResult {
  EditorLayerProperties layer_properties = 1;
}

message EditorSetLayerPropertiesCommand {
  EditorLayerProperties layer_properties = 1;
  bool set_parent_layer = 2;
  bool set_external = 3;
  bool set_exportable = 4;
  bool set_frozen = 5;
  bool set_visible = 6;
  bool set_color = 7;
  bool set_have_physics = 8;
  bool set_prefab_path = 9;
  bool set_modified = 10;
  bool set_object_container = 11;
  bool set_lod_merge_layer_flag = 12;
  bool set_lod_merge_max_view_dist = 13;
  bool set_lod_merge_max_mem_usage = 14;
  bool set_lod_merge_combine_range_factor = 15;
  bool set_default_loaded = 16;
  bool set_object_container_layer_type = 17;
  bool set_lod_merge_mem_usage_dist_lvls = 18;
}

message EditorHoudiniMesh {
  HoudiniMeshPrimitives primitives = 1;
  HoudiniMeshVertices vertices = 2;
  HoudiniMeshPoints points = 3;
  string source_filename = 4;
  string source_datetime = 5;
}

message EditorGeneratePreviewMeshCommand {
  repeated EditorHoudiniMesh houdini_meshes = 1;
  EditorGuid existing_preview_mesh_guid = 2;
  EditorGuid parent_guid = 3;
  Transformf transform = 4;
  string label = 5;
  EditorGuid redirect_to_obj_guid = 6;
}

message EditorGeneratePreviewMeshResult {
  EditorGuid new_mesh_guid = 1;
}

message EditorRaycastPhysicsCommand {
  repeated Vec3w ray_start_positions = 1;
  repeated Vec3w ray_end_positions = 2;
  bool use_back_faces = 3;
}

message EditorRaycastPhysicsResult {
  repeated bool hit_successes = 1;
  repeated Vec3w hit_positions = 2;
  repeated Vec3f hit_normals = 3;
  repeated int32 hit_surfaces = 4;
  repeated EditorGuid hit_object_guids = 5;
}

message EditorUpdateTinyMachineGraphCommand {
  string graph_content_json = 1;
  EditorGuid entity_guid = 2;
}

message EditorUpdateTinyMachineGraphResult {
  CompilationReport compilation_report = 1;
  RuntimeReport runtime_report = 2;

  message CompilationReport {
    repeated CompilationMessage messages = 1;

    message CompilationMessage {
      Severity severity = 1;
      Type type = 2;
      string source_id = 3;
      string message = 4;
    }

    enum Severity {
      SEVERITY_UNSPECIFIED = 0;
      SEVERITY_INFO = 1;
      SEVERITY_WARNING = 2;
      SEVERITY_ERROR = 3;
    }

    enum Type {
      TYPE_UNSPECIFIED = 0;
      TYPE_INCOMPATIBLE_TYPES = 1;
      TYPE_MISSING_INPUT = 2;
      TYPE_COMPILATION_ERROR = 3;
    }
  }
  message RuntimeReport {
    EditorGuid entity_guid = 1;
    repeated RuntimeMessage messages = 2;
    float graph_elapsed_time = 3;
    repeated NodePerformance node_performances = 4;

    message RuntimeMessage {
      Severity severity = 1;
      string message = 2;
      string node_id = 3;
    }

    message NodePerformance {
      string node_id = 1;
      float elapsed_time = 2;
    }

    enum Severity {
      SEVERITY_UNSPECIFIED = 0;
      SEVERITY_INFO = 1;
      SEVERITY_WARNING = 2;
      SEVERITY_ERROR = 3;
    }
  }
}

message EditorGetPhysicsCommand {
  EditorGuid object_guid = 1;
}

message EditorGetPhysicsResult {
  EditorObjectBaseInfo base_info = 1;
  EditorPhysics object_physics = 2;
}

message EditorSetPhysicsCommand {
  EditorGuid object_guid = 1;
  EditorPhysics object_physics = 2;
}

message EditorPhysics {
  string object_name = 1;
  repeated EditorPhysicsProxy object_proxies = 2;
  repeated EditorPhysics sub_objects_physics = 3;
}

message EditorPhysicsProxy {
  oneof proxy {
    Box box = 1;
    Sphere sphere = 2;
    Cylinder cylinder = 3;
    Capsule capsule = 4;
    Mesh mesh = 5;
  }
  PhysicsType physics_type = 6;
  string proxy_name = 7;

  message Box {
    Transformf transform = 1;
    Vec3f size = 2;
  }

  message Sphere {
    Vec3f center = 1;
    float radius = 2;
  }

  message Cylinder {
    Vec3f axis = 1;
    Vec3f center = 2;
    float radius = 3;
    float height = 4;
  }

  message Capsule {
    Vec3f axis = 1;
    Vec3f center = 2;
    float radius = 3;
    float height = 4;
  }

  message Mesh {
    repeated int32 indices = 1;
    repeated float points = 2;
    repeated sint32 material_idx = 3;
    repeated int32 foreign_idx = 4;
    int32 flags = 5;
  }

  enum PhysicsType {
    PHYSICS_TYPE_UNSPECIFIED = 0;
    PHYSICS_TYPE_DEFAULT = 1;
    PHYSICS_TYPE_NO_COLLIDE = 2;
    PHYSICS_TYPE_OBSTRUCT = 3;
  }
}

message EditorSetFrozenStatusCommand {
  EditorGuid object_guid = 1;
  bool is_frozen = 2;
}

message EditorSetVisibleStatusCommand {
  EditorGuid object_guid = 1;
  bool is_hidden = 2;
}

message EditorPauseMightyBridgeCommand {
  string source = 1;
}

message EditorPauseMightyBridgeCommandResult {}

message EditorResumeMightyBridgeCommand {
  string source = 1;
}

message EditorCreatedNodeEventCommand {
  string node_guid = 1;
  string node_path = 2;
  bool cook_on_create = 3;
}

message EditorSetObjectParentCommand {
  EditorGuid parent_guid = 1;
  EditorGuid child_guid = 2;
}

message EditorSetViewportCameraTransformCommand {
  Transformw transform = 1;
  float fov = 2;
  float resolution_height = 3;
  float resolution_width = 4;
}

message EditorGetViewportCameraTransformCommand {}

message EditorGetViewportCameraTransformResult {
  Transformw transform = 1;
  float fov = 2;
  float resolution_height = 3;
  float resolution_width = 4;
}

message EditorUpdateCookStatusCommand {
  string node_path = 1;
  bool done = 2;
  int32 progress = 3;
}

message EditorTakeScreenshotCommand {
  string path = 1;
}

message EditorShowMessageBoxCommand {
  string text = 1;
  MessageBoxIcon icon = 2;
  MessageBoxButtons buttons = 3;

  enum MessageBoxIcon {
    MESSAGE_BOX_ICON_UNSPECIFIED = 0;
    MESSAGE_BOX_ICON_HAND = 1;
    MESSAGE_BOX_ICON_QUESTION = 2;
    MESSAGE_BOX_ICON_EXCLAMATION = 3;
    MESSAGE_BOX_ICON_ASTERISK = 4;
  }

  enum MessageBoxButtons {
    MESSAGE_BOX_BUTTONS_UNSPECIFIED = 0;
    MESSAGE_BOX_BUTTONS_OK = 1;
    MESSAGE_BOX_BUTTONS_OKCANCEL = 2;
    MESSAGE_BOX_BUTTONS_ABORTRETRYIGNORE = 3;
    MESSAGE_BOX_BUTTONS_YESNOCANCEL = 4;
    MESSAGE_BOX_BUTTONS_YESNO = 5;
    MESSAGE_BOX_BUTTONS_RETRYCANCEL = 6;
  }
}

message EditorShowMessageBoxResult {
  MessageBoxResult result = 1;

  enum MessageBoxResult {
    MESSAGE_BOX_RESULT_UNSPECIFIED = 0;
    MESSAGE_BOX_RESULT_OK = 1;
    MESSAGE_BOX_RESULT_CANCEL = 2;
    MESSAGE_BOX_RESULT_ABORT = 3;
    MESSAGE_BOX_RESULT_RETRY = 4;
    MESSAGE_BOX_RESULT_IGNORE = 5;
    MESSAGE_BOX_RESULT_YES = 6;
    MESSAGE_BOX_RESULT_NO = 7;
  }
}

message EditorSetCVarCommand {
  string name = 1;
  oneof value {
    int32 int_value = 2;
    float float_value = 3;
    string string_value = 4;
  }
}

message EditorGetMeshInfoCommand {
  EditorGuid object_guid = 1;
}

message EditorGetMeshInfoResult {
  EditorObjectBaseInfo base_info = 1;
  int32 sub_object_count = 7;
  repeated string sub_object_infos = 8;
  int32 num_lods = 9;
  int32 min_usable_lod = 10;
  int32 max_usable_lod = 11;
  repeated float lod_geometric_mean_faces = 12;
  string material_path = 13;
  oneof mesh_faces {
    SubObjectMeshFaces sub_mesh_faces = 15;
    MeshInfo mesh_face = 16;
  }

  message MeshInfo {
    int32 vert_count = 2;
    int32 index_count = 3;
    int32 face_count = 4;
    EditorBoundingBox bbox = 5;
    repeated EditorMeshSubset subsets = 6;
    float geometric_mean_face = 17;
    int32 index = 18;
  }
  message SubObjectMeshFaces {
    repeated MeshInfo sub_object_mesh_faces = 14;
  }
}

message EditorGetEntitySlotsCommand {
  EditorGuid object_guid = 1;
}

message EditorCGASlot {
  string sub_object_name = 1;
  Transformf sub_object_tm = 2;
}

message EditorCharacterSlot {}

message EntitySlot {
  string path = 1;
  Transformf local_transform = 2;
  string material_path = 3;
  string tint_palette_path = 4;
  Transformw world_transform = 5;
  uint32 slot_index = 6;
  oneof slot_type {
    EditorCGASlot cga_slot = 7;
    EditorCharacterSlot character_slot = 8;
  }
}

message EditorGetEntitySlotsResult {
  repeated EntitySlot slots = 1;
}

message EditorPerforceMarkForAddCommand {
  string filename = 1;
}

message EditorPerforceMarkForAddResult {
  ResultType result_type = 1;

  enum ResultType {
    RESULT_TYPE_UNSPECIFIED = 0;
    RESULT_TYPE_SUCCESS = 1;
    RESULT_TYPE_NO_CONNECTION = 2;
    RESULT_TYPE_NO_FILE = 3;
    RESULT_TYPE_FILE_ALREADY_EXISTS = 4;
  }
}

message EditorDebugQuad {
  Vec3w p1 = 1;
  Vec3w p2 = 2;
  Vec3w p3 = 3;
  Vec3w p4 = 4;
}

message EditorDebugCircle {
  Vec3w pos = 1;
  float radius = 2;
  uint32 axis = 3;
}

message EditorDebugBox {
  Vec3w min = 1;
  Vec3w max = 2;
}

message EditorDebugSphere {
  Vec3w pos = 1;
  float radius = 2;
}

message EditorDebugCylinder {
  Vec3w pos = 1;
  Vec3w pos2 = 2;
  float radius = 3;
  uint32 segment_count = 4;
}

message EditorDebugLines {
  repeated Vec3w points = 1;
  bool is_closed = 2;
}

message EditorDebugText {
  Vec3w pos = 1;
  float size = 2;
  string text = 3;
  bool has_fixed_size = 4;
  bool is_centered = 5;
}

message EditorDebugShape {
  string id = 1;
  EditorRGBColor color = 2;
  float line_width = 3;
  bool is_local = 4;
  oneof shape {
    EditorDebugQuad debug_quad = 5;
    EditorDebugCircle debug_circle = 6;
    EditorDebugBox debug_box = 7;
    EditorDebugSphere debug_sphere = 8;
    EditorDebugCylinder debug_cylinder = 9;
    EditorDebugLines debug_lines = 10;
    EditorDebugText debug_text = 11;
  }
}

message EditorAddDebugShapesCommand {
  EditorGuid hto_guid = 1;
  bool replace = 2;
  repeated EditorDebugShape shapes = 3;
}

message EditorRemoveDebugShapesCommand {
  EditorGuid hto_guid = 1;
  bool remove_all = 2;
  repeated string shape_id = 3;
}

enum EditorLogLevel {
  EDITOR_LOG_LEVEL_UNSPECIFIED = 0;
  EDITOR_LOG_LEVEL_DEFAULT = 1;
  EDITOR_LOG_LEVEL_ALWAYS = 2;
  EDITOR_LOG_LEVEL_WARNING = 3;
  EDITOR_LOG_LEVEL_ERROR = 4;
}


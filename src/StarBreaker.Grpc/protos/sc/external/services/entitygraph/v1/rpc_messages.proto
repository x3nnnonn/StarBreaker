syntax = "proto3";

package sc.external.services.entitygraph.v1;

import "google/rpc/status.proto";
import "google/rpc/error_details.proto";
import "sc/external/common/api/v1/pagination.proto";
import "sc/external/services/entitygraph/v1/entity_commands.proto";
import "sc/external/services/entitygraph/v1/container_commands.proto";
import "sc/external/services/entitygraph/v1/inventory_commands.proto";
import "sc/external/services/entitygraph/v1/query.proto";
import "sc/external/services/entitygraph/v1/types.proto";
import "sc/external/common/api/v1/types.proto";
import "sc/external/common/network/v1/types.proto";

message EntityMutationStreamRequestBody {
  MutationArguments arguments = 1;
  repeated EntityGraphCommand commands = 5;
}

message EntityMutationStreamResponseBody {
  string id = 1;
  bool success = 2;
  .google.rpc.Status status = 3;
  common.api.v1.ServiceOverloadControlMetrics metrics = 4;
}

message LoadAllRequestBody {
  string shard_id = 1;
}

message LoadAllResponseBody {
  repeated EntityGraph graphs = 1;
  repeated EntitySnapshot snapshots = 2;
}

message GetEntitiesOwnersRequestBody {
  Scope scope = 1;
  repeated string entity_ids = 2;
}

message GetEntitiesOwnersResponseBody {
  repeated EntityOwner entity_owners = 1;
}

message ChangeInventoryConfigurationRequestBody {
  TransMutationArguments arguments = 1;
  ChangeInventoryConfigurationCommand command = 2;
}

message ChangeInventoryConfigurationResponseBody {}

message StowRequestBody {
  TransMutationArguments arguments = 1;
  StowCommand stow = 2;
  string from_shard_id = 3;
}

message StowResponseBody {
  string id = 1;
}

message UnstowRequestBody {
  TransMutationArguments arguments = 1;
  UnstowCommand unstow = 2;
  string to_shard_id = 3;
}

message UnstowResponseBody {
  string id = 1;
}

message BuryRequestBody {
  TransMutationArguments arguments = 1;
  BuryCommand bury = 2;
  Scope from = 3;
}

message BuryResponseBody {
  string id = 1;
}

message SnapshotQueryRequestBody {
  Scope scope = 1;
  SnapshotQuery query = 2;
}

message SnapshotQueryResponseBody {
  repeated EntitySnapshotResults results = 1;

  message EntitySnapshotResults {
    EntitySnapshot snapshot = 1;
  }
}

message CreateMetaRecordsRequestBody {
  MutationArguments arguments = 1;
  repeated MetaRecord records = 2;
}

message CreateMetaRecordsResponseBody {}

message QueryMetaRecordsRequestBody {
  Scope scope = 1;
  MetaRecordsQuery query = 2;
}

message QueryMetaRecordsResponseBody {
  common.api.v1.PaginationInfo page_info = 1;
  repeated MetaRecord results = 2;
}

message EraseMetaRecordsRequestBody {
  MutationArguments arguments = 1;
  repeated Body erasures = 2;

  message Body {
    string key = 1;
    string kind = 2;
    uint32 generation = 3;
  }
}

message EraseMetaRecordsResponseBody {}

message CreateEntityClassesRequestBody {
  MutationArguments arguments = 1;
  repeated EntityClass entity_classes = 2;
}

message CreateEntityClassesResponseBody {}

message EraseEntityClassesRequestBody {
  MutationArguments arguments = 1;
  repeated Body erasures = 2;

  message Body {
    string guid = 1;
    uint32 generation = 2;
  }
}

message EraseEntityClassesResponseBody {}

message QueryEntityClassesRequestBody {
  Scope scope = 1;
  EntityClassesQuery query = 2;
}

message QueryEntityClassesResponseBody {
  common.api.v1.PaginationInfo page_info = 1;
  repeated EntityClass results = 2;
}

message CreateShardRequestBody {
  uint32 generation = 1;
  ShardArguments arguments = 2;
  string shard_id = 3;
  common.network.v1.Region region = 4;
  string host = 5;
}

message CreateShardResponseBody {
  Shard shard = 1;
}

message DestroyShardRequestBody {
  string shard_id = 1;
  ShardArguments arguments = 2;
}

message DestroyShardResponseBody {}

message GetShardRequestBody {
  string shard_id = 1;
}

message GetShardResponseBody {
  Shard shard = 1;
}

message AcquireShardRequestBody {
  ShardArguments arguments = 1;
  repeated common.network.v1.Region regions = 2;
}

message AcquireShardResponseBody {
  Shard shard = 1;
}

message ChangeShardStatusRequestBody {
  string shard_id = 1;
  ShardStatus status = 2;
  ShardArguments arguments = 3;
}

message ChangeShardStatusResponseBody {}

message StowShardRequestBody {
  string shard_id = 1;
  ShardArguments arguments = 2;
  bool force = 3;
}

message StowShardResponseBody {
  uint32 stowed_player_count = 1;
  uint32 failed_player_count = 3;
  repeated StowError player_errors = 5;
  uint32 stowed_entity_count = 7;
  uint32 failed_entity_count = 8;
  repeated StowError entity_errors = 9;

  message StowError {
    string name = 1;
    string message = 2;
    string geid = 3;
  }
}

message QueryShardsRequestBody {
  ShardQuery query = 1;
}

message QueryShardsResponseBody {
  common.api.v1.PaginationInfo page_info = 1;
  repeated Shard results = 2;
}

message RepairShardRequestBody {
  string shard_id = 1;
  ShardArguments arguments = 2;
  bool remove_orphaned_edges = 3;
  bool remove_orphaned_nodes = 4;
}

message RepairShardResponseBody {}

message RepairShardSchemaRequestBody {
  string shard_id = 1;
  ShardArguments arguments = 2;
}

message RepairShardSchemaResponseBody {}

message MutateContainerGraphRequestBody {
  MutationArguments arguments = 1;
  repeated ContainerGraphCommand commands = 2;
}

message MutateContainerGraphResponseBody {}

message ContainerMutationStreamRequestBody {
  MutationArguments arguments = 1;
  repeated ContainerGraphCommand commands = 2;
}

message ContainerMutationStreamResponseBody {
  string id = 1;
  bool success = 2;
  .google.rpc.Status status = 3;
  common.api.v1.ServiceOverloadControlMetrics metrics = 4;
}

message ContainerQueryRequestBody {
  Scope scope = 1;
  ContainerGraphQuery query = 2;
}

message ContainerQueryResponseBody {
  common.api.v1.PaginationInfo page_info = 1;
  ContainerGraph results = 2;
}

message ContainerQueryStreamRequestBody {
  Scope scope = 1;
  ContainerGraphStreamQuery query = 2;
  int32 batch_size = 3;
}

message ContainerQueryStreamResponseBody {
  ContainerGraph results = 1;
}

message MoveRequestBody {
  MutationArguments arguments = 1;
  MoveCommand move = 2;
}

message MoveResponseBody {}

message GetInventoriesRequestBody {
  string owner_id = 1;
}

message GetInventoriesResponseBody {
  repeated Node inventories = 1;
}

message EntityQueryRequestBody {
  Scope scope = 1;
  EntityGraphQuery query = 2;
}

message EntityQueryResponseBody {
  common.api.v1.PaginationInfo page_info = 1;
  EntityGraph results = 2;
  repeated EntitySnapshot snapshots = 3;
  repeated EntityClass entity_classes = 4;
}

message EntityQueryStreamRequestBody {
  Scope scope = 1;
  EntityGraphStreamQuery query = 2;
  int32 batch_size = 3;
}

message EntityQueryStreamResponseBody {
  EntityGraph results = 1;
  repeated EntitySnapshot snapshots = 2;
  repeated EntityClass entity_classes = 3;
}

message MutateEntitiesRequestBody {
  MutationArguments arguments = 1;
  repeated EntityGraphCommand commands = 5;
}

message MutateEntitiesResponseBody {}

message MutateInventoriesRequestBody {
  MutationArguments arguments = 1;
  repeated InventoryCommand commands = 2;
}

message MutateInventoriesResponseBody {}

message InventoryQueryRequestBody {
  InventoryQuery query = 1;
}

message InventoryQueryResponseBody {
  common.api.v1.PaginationInfo page_info = 1;
  repeated Inventory results = 2;
}

message MeltRequestBody {
  TransMutationArguments arguments = 1;
  MeltCommand melt = 2;
}

message MeltResponseBody {}

message GetOverloadControlMetricsRequestBody {
  string shard_id = 1;
}

message GetOverloadControlMetricsResponseBody {
  common.api.v1.ServiceOverloadControlMetrics metrics = 1;
}

message GetEntitiesRootsRequestBody {
  Scope scope = 1;
  repeated string entity_ids = 2;
  bool tree = 3;
  bool snapshots = 4;
  bool entity_classes = 5;
}

message GetEntitiesRootsResponseBody {
  repeated Body entity_roots = 1;
  repeated EntitySnapshot snapshots = 2;
  repeated EntityClass entity_classes = 3;

  message Body {
    string entity_id = 1;
    Node root = 2;
    EntityGraph graph = 3;
  }
}

message GetEntityStowContextsRequestBody {
  EntityStowContextQuery query = 1;
}

message GetEntityStowContextsResponseBody {
  common.api.v1.PaginationInfo page_info = 1;
  repeated EntityStowContext results = 2;
}

message MoveAllRequestBody {
  MutationArguments arguments = 1;
  MoveAllCommand move = 2;
}

message MoveAllResponseBody {}


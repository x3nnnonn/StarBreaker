syntax = "proto3";

package sc.external.services.entitygraph.v1;

import "sc/external/services/entitygraph/v1/types.proto";
import "sc/external/common/api/v1/pagination.proto";

message EntityGraphQuery {
  EntityFilter filter = 1;
  common.api.v1.PaginationArguments pagination = 2;
  EntityProjection projection = 3;
  EntityClassFilter entity_class_filter = 4;
  EntitySortingArguments sort = 5;
  string language = 6;
}

message EntityGraphStreamQuery {
  uint64 entity_id = 1;
  EntityPruneConstraint prune = 2;
  EntityFilter filter = 3;
  bool snapshots = 4;
}

message EntitySortingByProperty {
  string property = 1;
  SortComparator sort_comparator = 2;
}

message EntitySortingByClassProperty {
  string property = 1;
  SortComparator sort_comparator = 2;
}

message EntitySortingByEdgeProperty {
  string property = 1;
  string edge_type = 2;
  SortComparator sort_comparator = 3;
}

message EntitySortingArguments {
  common.api.v1.PaginationOrder order = 1;
  oneof property {
    EntitySortingByProperty entity_property = 2;
    EntitySortingByClassProperty class_property = 3;
    EntitySortingByEdgeProperty edge_property = 4;
  }
}

message PruneEdgePropertyFilter {
  string property = 1;
  ComparisonOperator operator = 2;
  repeated ScalarValue values = 3;
  string edge_type = 4;
}

message PruneEdgeCompositeFilter {
  LogicalOperator operator = 1;
  repeated PruneEdgePropertyFilter filters = 2;
}

message PruneEdgeFilter {
  oneof filter_type {
    PruneEdgeCompositeFilter composite_filter = 1;
    PruneEdgePropertyFilter property_filter = 2;
  }
}

message EntityPruneConstraint {
  bool from_root_node = 1;
  EntityFilter from = 2;
  PruneEdgeFilter edge_filter = 3;
  InventoryFilter inventory_filter = 4;
}

message EntityTreeProjection {
  bool enabled = 1;
  EntityPruneConstraint prune = 2;
  EntityFilter filter = 3;
  bool path_mode = 4;
  bool include_inventory_nodes = 5;
  InventoryFilter inventory_filter = 6;
}

message EntityProjection {
  EntityTreeProjection tree = 1;
  bool snapshots = 2;
  bool entity_classes = 3;
  bool outgoing_edges = 4;
}

message EntityFilter {
  oneof filter_type {
    EntityCompositeFilter composite_filter = 1;
    NodeLabelFilter label_filter = 2;
    PropertyFilter property_filter = 3;
    EdgeFilter edge_filter = 4;
    BitFilter bit_filter = 5;
    EntityClassFilter entity_classes_filter = 6;
  }
}

message NodeLabelFilter {
  LabelOperator operator = 1;
  repeated EntityNodeLabel labels = 2;
}

message EntityCompositeFilter {
  LogicalOperator operator = 1;
  repeated EntityFilter filters = 2;
}

message ContainerGraphQuery {
  ContainerFilter filter = 1;
  common.api.v1.PaginationArguments pagination = 2;
  ContainerProjection projection = 3;
  common.api.v1.PaginationSort sort = 4;
}

message ContainerPruneConstraint {
  bool from_root_node = 1;
  ContainerFilter from = 2;
}

message ContainerTreeProjection {
  bool enabled = 1;
  ContainerPruneConstraint prune = 2;
  ContainerFilter filter = 3;
}

message ContainerProjection {
  ContainerTreeProjection tree = 1;
  bool snapshots = 2;
  bool entity_classes = 3;
}

message ContainerFilter {
  oneof filter_type {
    ContainerCompositeFilter composite_filter = 1;
    ContainerLabelFilter label_filter = 2;
    PropertyFilter property_filter = 3;
    EdgeFilter edge_filter = 4;
  }
}

message ContainerLabelFilter {
  LabelOperator operator = 1;
  repeated ContainerNodeLabel labels = 2;
}

message ContainerCompositeFilter {
  LogicalOperator operator = 1;
  repeated ContainerFilter filters = 2;
}

message ContainerGraphStreamQuery {
  uint64 geid = 1;
  ContainerPruneConstraint prune = 2;
  ContainerFilter filter = 3;
}

message PropertyFilter {
  string property = 1;
  ComparisonOperator operator = 2;
  repeated ScalarValue values = 3;
}

message BitFilter {
  string property = 1;
  BitOperator operator = 2;
  int32 value = 3;
}

message EdgeFilter {
  string edge_type = 1;
  repeated ScalarValue values = 2;
}

message SnapshotQuery {
  repeated DocumentQuery queries = 1;

  message DocumentQuery {
    uint64 entity_id = 1;
    repeated SnapshotVariableFilter filter = 2;
  }
}

message SnapshotVariableFilter {
  oneof filter_type {
    SnapshotVariableNameFilter name_filter = 1;
    SnapshotVariableTypeFilter type_filter = 2;
  }
}

message SnapshotVariableNameFilter {
  uint32 name = 1;
}

message SnapshotVariableTypeFilter {
  uint32 type = 2;
}

message MetaRecordsQuery {
  MetaRecordsFilter filter = 1;
  common.api.v1.PaginationArguments pagination = 2;
  common.api.v1.PaginationSort sort = 3;
}

message MetaRecordCompositeFilter {
  LogicalOperator operator = 1;
  repeated MetaRecordsFilter filters = 2;
}

message MetaRecordPropertyFilter {
  string property = 1;
  ComparisonOperator operator = 2;
  repeated ScalarValue values = 3;
}

message MetaRecordsFilter {
  oneof filter_type {
    MetaRecordCompositeFilter composite_filter = 1;
    MetaRecordPropertyFilter property_filter = 3;
  }
}

message EntityClassesQuery {
  EntityClassFilter filter = 1;
  common.api.v1.PaginationArguments pagination = 2;
  common.api.v1.PaginationSort sort = 3;
}

message EntityClassNameFilter {
  string language = 1;
  ComparisonOperator operator = 2;
  repeated ScalarValue values = 3;
}

message EntityClassPropertyFilter {
  string property = 1;
  ComparisonOperator operator = 2;
  repeated ScalarValue values = 3;
}

message EntityClassFilter {
  oneof filter_type {
    EntityClassCompositeFilter composite_filter = 1;
    EntityClassPropertyFilter property_filter = 2;
    EntityClassNameFilter name_filter = 3;
  }
}

message EntityClassCompositeFilter {
  LogicalOperator operator = 1;
  repeated EntityClassFilter filters = 2;
}

message ShardQuery {
  ShardFilter filter = 1;
  common.api.v1.PaginationArguments pagination = 2;
  common.api.v1.PaginationSort sort = 3;
}

message ShardPropertyFilter {
  string property = 1;
  ComparisonOperator operator = 2;
  repeated ScalarValue values = 3;
}

message ShardFilter {
  oneof filter_type {
    ShardCompositeFilter composite_filter = 1;
    ShardPropertyFilter property_filter = 2;
  }
}

message ShardCompositeFilter {
  LogicalOperator operator = 1;
  repeated ShardFilter filters = 2;
}

message InventoryFilter {
  oneof filter_type {
    InventoryCompositeFilter composite_filter = 1;
    PropertyFilter property_filter = 2;
    EdgeFilter edge_filter = 3;
  }
}

message InventoryCompositeFilter {
  LogicalOperator operator = 1;
  repeated InventoryFilter filters = 2;
}

message InventoryPruneConstraint {
  InventoryFilter from = 1;
  PruneEdgeFilter edge_filter = 2;
  EntityFilter entity_filter = 3;
}

message InventoryTreeFilter {
  oneof root {
    uint64 entity_geid = 1;
    string inventory_id = 2;
  }
  InventoryPruneConstraint prune = 3;
  InventoryFilter filter = 4;
}

message InventoryQuery {
  oneof find_by {
    InventoryFilter filter = 1;
    InventoryTreeFilter tree = 2;
  }
  common.api.v1.PaginationArguments pagination = 3;
  common.api.v1.PaginationSort sort = 4;
}

message EntityStowContextFilter {
  oneof filter_type {
    EntityStowContextCompositeFilter composite_filter = 1;
    PropertyFilter property_filter = 2;
  }
}

message EntityStowContextCompositeFilter {
  LogicalOperator operator = 1;
  repeated EntityStowContextFilter filters = 2;
}

message EntityStowContextQuery {
  EntityStowContextFilter filter = 1;
  common.api.v1.PaginationArguments pagination = 2;
  common.api.v1.PaginationSort sort = 3;
}

enum ComparisonOperator {
  COMPARISON_OPERATOR_UNSPECIFIED = 0;
  COMPARISON_OPERATOR_LESS_THAN = 1;
  COMPARISON_OPERATOR_LESS_THAN_OR_EQUAL = 2;
  COMPARISON_OPERATOR_GREATER_THAN = 3;
  COMPARISON_OPERATOR_GREATER_THAN_OR_EQUAL = 4;
  COMPARISON_OPERATOR_EQUAL = 5;
  COMPARISON_OPERATOR_NOT_EQUAL = 6;
  COMPARISON_OPERATOR_MATCH = 7;
  COMPARISON_OPERATOR_NOT_MATCH = 8;
  COMPARISON_OPERATOR_IN = 9;
  COMPARISON_OPERATOR_NOT_IN = 10;
}

enum LogicalOperator {
  LOGICAL_OPERATOR_UNSPECIFIED = 0;
  LOGICAL_OPERATOR_AND = 1;
  LOGICAL_OPERATOR_OR = 2;
}

enum SortComparator {
  SORT_COMPARATOR_UNSPECIFIED = 0;
  SORT_COMPARATOR_LEXICOGRAPHIC = 1;
  SORT_COMPARATOR_NUMERICAL = 2;
}


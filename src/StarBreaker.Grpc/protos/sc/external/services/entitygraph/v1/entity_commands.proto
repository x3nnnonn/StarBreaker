syntax = "proto3";

package sc.external.services.entitygraph.v1;

import "sc/external/services/entitygraph/v1/types.proto";
import "sc/external/common/types/v1/transforms.proto";
import "sc/external/services/entitygraph/v1/inventory_commands.proto";
import "sc/external/services/longterm/v1/types.proto";

message EntityGraphCommand {
  oneof params {
    CreateCommand create = 1;
    EraseCommand erase = 2;
    AttachCommand attach = 3;
    DetachCommand detach = 4;
    TransferCommand transfer = 5;
    MoveCommand move = 6;
    AddLabelsCommand add_labels = 7;
    RemoveLabelsCommand remove_labels = 8;
    ChangeFlagsCommand change_flags = 9;
    ChangeLocationCommand change_location = 10;
    SetSnapshotCommand set_snapshot = 11;
    ChangeSnapshotCommand change_snapshot = 12;
    RemoveSnapshotCommand remove_snapshot = 13;
    StackCommand stack = 14;
    UnstackCommand unstack = 15;
    SetStackCommand setstack = 16;
    ChangeRankCommand change_rank = 17;
    ActivateCommand activate = 18;
    AddTagsCommand add_tags = 19;
    RemoveTagsCommand remove_tags = 20;
    SetTagsCommand set_tags = 21;
    CreateInventoryCommand create_inventory = 22;
    EraseInventoryCommand erase_inventory = 23;
    ChangeInventoryConfigurationCommand change_inventory_config = 24;
    DeactivateCommand deactivate = 25;
    SyncCommand sync = 26;
    CreateLTRecordCommand create_lt_record = 28;
    MoveAllCommand move_all = 29;
    CreateStowContextsCommand create_stow_context = 30;
    UpdateParentUrnsCommand update_parent_urn = 31;
  }
}

message CreateCommand {
  repeated Body creates = 1;

  message Body {
    EntityGraph graphs = 1;
  }
}

message EraseCommand {
  repeated Body erasures = 1;

  message Body {
    uint64 entity_id = 1;
  }
}

message BuryCommand {
  repeated Body erasures = 1;

  message Body {
    uint64 entity_id = 1;
    repeated EntityGraphCommand post_commands = 2;
    SyncCommand sync = 3;
    repeated uint64 geids = 4;
  }
}

message StowCommand {
  repeated Body stow = 1;

  message Body {
    uint64 entity_id = 1;
    string to_inventory_id = 2;
    bool transfer_to_inventory_owner = 3;
    repeated EntityGraphCommand post_commands = 4;
    string rank = 5;
    oneof stow_config {
      PhysicalInventoryEdgeConfiguration physical = 6;
    }
    map<string, ScalarValue> deactivation_context = 7;
    repeated uint64 geids = 8;
    SyncCommand sync = 9;

  }
}

message UnstowCommand {
  repeated Body unstow = 1;

  message Body {
    uint64 entity_id = 1;
    string from_inventory_id = 2;
    repeated EntityGraphCommand post_commands = 3;
    map<string, ScalarValue> activation_context = 4;

  }
}

message AttachCommand {
  repeated Body attachments = 1;

  message Body {
    uint64 entity_id = 1;
    uint64 parent_id = 2;
    AttachmentType attachment_type = 3;
    uint64 attachment_port = 4;
    uint64 attachment_geid = 5;
    AttachmentOwnershipBehavior ownership = 6;
  }
}

message DetachCommand {
  repeated Body detaches = 1;

  message Body {
    uint64 entity_id = 1;
    AttachmentOwnershipBehavior ownership = 2;
  }
}

message TransferCommand {
  repeated Body transfers = 1;

  message Body {
    bool clear = 1;
    uint64 entity_id = 2;
    oneof owner {
      uint64 player_id = 3;
      uint64 organization_id = 4;
    }
    bool include_children = 5;
  }
}

message MoveCommand {
  repeated Body moves = 1;

  message Body {
    uint64 entity_id = 1;
    string from_inventory_id = 2;
    string to_inventory_id = 3;
    string rank = 4;
  }
}

message AddLabelsCommand {
  repeated Body updates = 1;

  message Body {
    uint64 entity_id = 1;
    repeated EntityNodeLabel labels = 2;
  }
}

message RemoveLabelsCommand {
  repeated Body updates = 1;

  message Body {
    uint64 entity_id = 1;
    repeated EntityNodeLabel labels = 2;
  }
}

message ChangeFlagsCommand {
  repeated Body changes = 1;

  message Body {
    uint64 entity_id = 1;
    uint64 flags = 2;
    uint64 game_flags = 3;
  }
}

message ChangeLocationCommand {
  repeated Body changes = 1;

  message Body {
    uint64 entity_id = 1;
    common.types.v1.Quatd orientation = 2;
    common.types.v1.Vec3d position = 3;
    uint32 location_id = 5;
    float radius = 6;
    double scale = 7;
  }
}

message SetSnapshotCommand {
  repeated Body snapshots = 1;

  message Body {
    EntitySnapshot snapshot = 1;
  }
}

message ChangeSnapshotCommand {
  repeated Body updates = 1;

  message Body {
    EntitySnapshot snapshot = 1;
  }
}

message RemoveSnapshotCommand {
  repeated Body removals = 1;

  message Body {
    uint64 entity_id = 1;
  }
}

message StackCommand {
  repeated Body stacks = 1;

  message Body {
    uint64 entity_id = 1;
    int32 amount = 2;
  }
}

message UnstackCommand {
  repeated Body unstacks = 1;

  message Body {
    uint64 entity_id = 1;
    int32 amount = 2;
  }
}

message SetStackCommand {
  repeated Body changes = 1;

  message Body {
    uint64 entity_id = 1;
    int32 amount = 2;
  }
}

message ChangeRankCommand {
  repeated Body changes = 1;

  message Body {
    uint64 entity_id = 1;
    string inventory_id = 2;
    string rank = 3;
  }
}

message ActivateCommand {
  repeated Body activations = 1;

  message Body {
    repeated uint64 geids = 1;
    map<string, ScalarValue> activation_context = 2;

  }
}

message AddTagsCommand {
  repeated Body updates = 1;

  message Body {
    uint64 entity_id = 1;
    repeated uint32 tags = 2;
  }
}

message RemoveTagsCommand {
  repeated Body updates = 1;

  message Body {
    uint64 entity_id = 1;
    repeated uint32 tags = 2;
  }
}

message SetTagsCommand {
  repeated Body updates = 1;

  message Body {
    uint64 entity_id = 1;
    repeated uint32 tags = 2;
  }
}

message MeltByOwner {
  uint64 owner_id = 1;
  bool enabled = 2;
}

message MeltCommand {
  repeated Body melts = 1;

  message Body {
    repeated string parent_urns = 1;
    MeltByOwner melt_by_owner = 2;
  }
}

message DeactivateCommand {
  repeated Body deactivations = 1;

  message Body {
    repeated uint64 geids = 1;
    map<string, ScalarValue> deactivation_context = 2;

  }
}

message SyncCommandEntityProperties {
  uint64 entity_flags = 1;
  common.types.v1.Quatd orientation = 2;
  common.types.v1.Vec3d position = 3;
  double scale = 4;
  double radius = 5;
  repeated uint32 tags = 6;
  bool is_streaming_group = 7;
  string parent_urn = 8;
}

message SyncCommand {
  repeated Body sync_tasks = 1;

  message Body {
    uint32 version = 1;
    uint64 entity_id = 2;
    EntitySnapshot snapshot = 4;
    EntityEdge attachment_edge = 5;
    uint32 dirty_flags = 6;
    SyncCommandEntityProperties entity_properties = 7;
  }
}

message CreateLTRecordCommand {
  repeated Body creates = 2;

  message Body {
    longterm.v1.OwnershipRecord record = 1;
  }
}

message MoveAllCommand {
  repeated Body moves = 1;

  message Body {
    string from_inventory_id = 1;
    string to_inventory_id = 2;
  }
}

message CreateStowContextsCommand {
  repeated Body creates = 2;

  message Body {
    EntityStowContext context = 1;
  }
}

message UpdateParentUrnsCommand {
  repeated Body updates = 2;

  message Body {
    uint64 entity_geid = 1;
    string new_parent_urn = 2;
  }
}

enum AttachmentOwnershipBehavior {
  ATTACHMENT_OWNERSHIP_BEHAVIOR_UNSPECIFIED = 0;
  ATTACHMENT_OWNERSHIP_BEHAVIOR_NONE = 1;
  ATTACHMENT_OWNERSHIP_BEHAVIOR_INHERIT = 2;
  ATTACHMENT_OWNERSHIP_BEHAVIOR_ADOPT = 3;
}


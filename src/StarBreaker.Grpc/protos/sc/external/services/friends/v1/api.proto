syntax = "proto3";

package sc.external.services.friends.v1;

import "google/api/annotations.proto";
import "sc/external/services/friends/v1/types.proto";
import "sc/external/common/shard/v1/types.proto";
import "sc/external/common/api/v1/pagination.proto";
import "sc/external/common/api/v1/query.proto";

service FriendService {
  rpc GetFriendList ( GetFriendListRequest ) returns ( GetFriendListResponse );
  rpc SearchAccount ( SearchAccountRequest ) returns ( SearchAccountResponse );
  rpc RemoveFriend ( RemoveFriendRequest ) returns ( RemoveFriendResponse );
  rpc GetShardInfo ( GetShardInfoRequest ) returns ( GetShardInfoResponse );
  rpc SendFriendRequest ( SendFriendRequestRequest ) returns ( SendFriendRequestResponse );
  rpc CancelFriendRequest ( CancelFriendRequestRequest ) returns ( CancelFriendRequestResponse );
  rpc GetPendingFriendRequest ( GetPendingFriendRequestRequest ) returns ( GetPendingFriendRequestResponse );
  rpc AcceptFriendRequest ( AcceptFriendRequestRequest ) returns ( AcceptFriendRequestResponse );
  rpc DeclineFriendRequest ( DeclineFriendRequestRequest ) returns ( DeclineFriendRequestResponse );
  rpc GetBlockedAccount ( GetBlockedAccountRequest ) returns ( GetBlockedAccountResponse );
  rpc BlockAccount ( BlockAccountRequest ) returns ( BlockAccountResponse );
  rpc UnblockAccount ( UnblockAccountRequest ) returns ( UnblockAccountResponse );
}

message GetFriendListRequest {
  common.api.v1.Query query = 1;
  common.api.v1.PaginationArguments pagination = 2;
}

message GetFriendListResponse {
  repeated Friend friends = 1;
  common.api.v1.PaginationInfo page_info = 2;
}

message SearchAccountRequest {
  string name = 1;
  common.api.v1.PaginationArguments pagination = 2;
}

message SearchAccountResponse {
  repeated FriendInfo accounts = 1;
  common.api.v1.PaginationInfo page_info = 2;
}

message RemoveFriendRequest {
  uint32 account_id = 1;
}

message RemoveFriendResponse {}

message GetShardInfoRequest {
  uint32 account_id = 1;
}

message GetShardInfoResponse {
  common.shard.v1.ShardInfo shard_info = 1;
}

message SendFriendRequestRequest {
  oneof identifier {
    uint32 account_id = 1;
    uint64 player_id = 2;
  }
}

message SendFriendRequestResponse {
  string request_id = 1;
}

message CancelFriendRequestRequest {
  string request_id = 1;
}

message CancelFriendRequestResponse {}

message GetPendingFriendRequestRequest {
  common.api.v1.Query query = 1;
  common.api.v1.PaginationArguments pagination = 2;
}

message GetPendingFriendRequestResponse {
  repeated FriendRequest pending_friend_requests = 1;
  common.api.v1.PaginationInfo page_info = 2;
}

message AcceptFriendRequestRequest {
  string request_id = 1;
}

message AcceptFriendRequestResponse {}

message DeclineFriendRequestRequest {
  string request_id = 1;
}

message DeclineFriendRequestResponse {}

message GetBlockedAccountRequest {
  common.api.v1.Query query = 1;
  common.api.v1.PaginationArguments pagination = 2;
}

message GetBlockedAccountResponse {
  repeated FriendInfo blocked_accounts = 1;
  common.api.v1.PaginationInfo page_info = 2;
}

message BlockAccountRequest {
  oneof identifier {
    uint32 account_id = 1;
    uint64 player_id = 2;
  }
}

message BlockAccountResponse {}

message UnblockAccountRequest {
  uint32 account_id = 1;
}

message UnblockAccountResponse {}


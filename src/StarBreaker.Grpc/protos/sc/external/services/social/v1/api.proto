syntax = "proto3";

package sc.external.services.social.v1;

import "google/api/annotations.proto";
import "sc/external/services/social/v1/types.proto";
import "sc/external/common/shard/v1/types.proto";
import "sc/external/common/api/v1/pagination.proto";

service SocialService {
  rpc CreateDMGroup ( CreateDMGroupRequest ) returns ( CreateDMGroupResponse );
  rpc CreateGroup ( CreateGroupRequest ) returns ( CreateGroupResponse );
  rpc TransferGroupLeadership ( TransferGroupLeadershipRequest ) returns ( TransferGroupLeadershipResponse );
  rpc RenameGroup ( RenameGroupRequest ) returns ( RenameGroupResponse );
  rpc DestroyGroup ( DestroyGroupRequest ) returns ( DestroyGroupResponse );
  rpc GetGroupsById ( GetGroupsByIdRequest ) returns ( GetGroupsByIdResponse );
  rpc ListGroups ( ListGroupsRequest ) returns ( ListGroupsResponse );
  rpc SetGroupPreferences ( SetGroupPreferencesRequest ) returns ( SetGroupPreferencesResponse );
  rpc LeaveGroup ( LeaveGroupRequest ) returns ( LeaveGroupResponse );
  rpc KickGroupMember ( KickGroupMemberRequest ) returns ( KickGroupMemberResponse );
  rpc SendGroupInvitation ( SendGroupInvitationRequest ) returns ( SendGroupInvitationResponse );
  rpc InviteToParty ( InviteToPartyRequest ) returns ( InviteToPartyResponse );
  rpc AcceptInvitation ( AcceptInvitationRequest ) returns ( AcceptInvitationResponse );
  rpc DeclineInvitation ( DeclineInvitationRequest ) returns ( DeclineInvitationResponse );
  rpc RevokeInvitation ( RevokeInvitationRequest ) returns ( RevokeInvitationResponse );
  rpc ListPendingInvitations ( ListPendingInvitationsRequest ) returns ( ListPendingInvitationsResponse );
  rpc GetInstanceInfo ( GetInstanceInfoRequest ) returns ( GetInstanceInfoResponse );
  rpc GetSubscriptionKey ( GetSubscriptionKeyRequest ) returns ( GetSubscriptionKeyResponse );
  rpc AddGroupModerator ( AddGroupModeratorRequest ) returns ( AddGroupModeratorResponse );
  rpc RemoveGroupModerator ( RemoveGroupModeratorRequest ) returns ( RemoveGroupModeratorResponse );
  rpc SetMemberReadyStatus ( SetMemberReadyStatusRequest ) returns ( SetMemberReadyStatusResponse );
}

message CreateDMGroupRequest {
  string member_urn = 1;
}

message CreateDMGroupResponse {
  Group group = 1;
}

message CreateGroupRequest {
  string name = 1;
}

message CreateGroupResponse {
  Group group = 1;
}

message RenameGroupRequest {
  string group_id = 1;
  string name = 2;
}

message RenameGroupResponse {}

message DestroyGroupRequest {
  string group_id = 1;
}

message DestroyGroupResponse {}

message GetGroupsByIdRequest {
  repeated string group_ids = 1;
}

message GetGroupsByIdResponse {
  repeated Group groups = 1;
  repeated GroupMemberPreferences preferences = 2;
}

message ListGroupsRequest {
  GroupFilters filters = 1;
  common.api.v1.PaginationArguments pagination = 2;
}

message ListGroupsResponse {
  repeated Group groups = 1;
  repeated GroupMemberPreferences preferences = 2;
  common.api.v1.PaginationInfo page_info = 3;
}

message SetGroupPreferencesRequest {
  string group_id = 1;
  map<string, string> preferences = 2;

}

message SetGroupPreferencesResponse {}

message SendGroupInvitationRequest {
  string group_id = 1;
  repeated string member_urns = 2;
}

message SendGroupInvitationResponse {
  repeated Invitation invitations = 1;
}

message InviteToPartyRequest {
  string member_urn = 1;
  string name = 2;
}

message InviteToPartyResponse {
  Invitation invitation = 1;
}

message AcceptInvitationRequest {
  string invitation_id = 1;
}

message AcceptInvitationResponse {}

message DeclineInvitationRequest {
  string invitation_id = 1;
}

message DeclineInvitationResponse {}

message RevokeInvitationRequest {
  string invitation_id = 1;
}

message RevokeInvitationResponse {}

message LeaveGroupRequest {
  string group_id = 1;
}

message LeaveGroupResponse {}

message GetSubscriptionKeyRequest {}

message GetSubscriptionKeyResponse {
  string subscription_key = 1;
}

message ListPendingInvitationsRequest {
  GroupType group_type = 1;
  common.api.v1.PaginationArguments pagination = 2;
}

message ListPendingInvitationsResponse {
  repeated Invitation invitations = 1;
  common.api.v1.PaginationInfo page_info = 2;
}

message KickGroupMemberRequest {
  string group_id = 1;
  string member_urn = 2;
}

message KickGroupMemberResponse {}

message TransferGroupLeadershipRequest {
  string group_id = 1;
  string player_urn = 2;
}

message TransferGroupLeadershipResponse {}

message GetInstanceInfoRequest {
  string player_urn = 1;
}

message GetInstanceInfoResponse {
  common.shard.v1.ShardInfo shard_info = 1;
}

message AddGroupModeratorRequest {
  string group_id = 1;
  string moderator_urn = 2;
}

message AddGroupModeratorResponse {}

message RemoveGroupModeratorRequest {
  string group_id = 1;
  string moderator_urn = 2;
}

message RemoveGroupModeratorResponse {}

message SetMemberReadyStatusRequest {
  string group_id = 1;
  bool ready = 2;
}

message SetMemberReadyStatusResponse {}


syntax = "proto3";

package sc.internal.services.login.v1;

import "google/api/annotations.proto";
import "sc/internal/services/login/v1/query.proto";
import "sc/external/services/login/v1/types.proto";
import "sc/external/common/api/v1/pagination.proto";
import "sc/external/common/api/v1/query.proto";

service LoginService {
  rpc GetQueueStats ( GetQueueStatsRequest ) returns ( GetQueueStatsResponse );
  rpc ConfigureQueue ( ConfigureQueueRequest ) returns ( ConfigureQueueResponse );
  rpc QueryPendingLogins ( QueryPendingLoginsRequest ) returns ( QueryPendingLoginsResponse );
  rpc QueryLoginLogs ( QueryLoginLogsRequest ) returns ( QueryLoginLogsResponse );
}

message GetQueueStatsRequest {}

message GetQueueStatsResponse {
  repeated Queue queues = 1;

  message Queue {
    external.services.login.v1.LoginQueue queue = 1;
    external.services.login.v1.LoginQueueStats stats = 2;
  }
}

message ConfigureQueueRequest {
  string queue_name = 1;
  uint32 max_processing_queue_size = 2;
  uint32 max_players_in_queue = 3;
}

message ConfigureQueueResponse {}

message QueryPendingLoginsRequest {
  string queue_name = 4;
  QueueType queue_type = 5;
  external.common.api.v1.Query query = 6;
}

message QueryPendingLoginsResponse {
  repeated external.services.login.v1.LoginRequestStatus results = 1;
  external.common.api.v1.PaginationInfo page_info = 2;
}

message QueryLoginLogsRequest {
  LoginLogsQuery query = 1;
}

message QueryLoginLogsResponse {
  external.common.api.v1.PaginationInfo page_info = 1;
  repeated LoginLogs results = 2;
}

enum QueueType {
  QUEUE_TYPE_UNSPECIFIED = 0;
  QUEUE_TYPE_LOGIN_QUEUE = 1;
  QUEUE_TYPE_PROCESSING_QUEUE = 2;
}


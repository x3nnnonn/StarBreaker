syntax = "proto3";

package sc.internal.services.entity_creator.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "sc/external/common/command/v1/types.proto";
import "sc/internal/services/entity_creator/v1/types.proto";
import "sc/external/services/entitlement/v1/types.proto";
import "sc/external/common/game/v1/types.proto";
import "sc/external/services/entitygraph/v1/types.proto";
import "sc/external/common/types/v1/customization.proto";

service EntityCreatorService {
  rpc CreateEntity ( CreateEntityRequest ) returns ( CreateEntityResponse );
  rpc CheckMissingEntityClass ( CheckMissingEntityClassRequest ) returns ( CheckMissingEntityClassResponse );
  rpc CreatePlayer ( CreatePlayerRequest ) returns ( CreatePlayerResponse );
  rpc DeletePlayer ( DeletePlayerRequest ) returns ( DeletePlayerResponse );
  rpc CreateFromEntitlements ( CreateFromEntitlementsRequest ) returns ( CreateFromEntitlementsResponse );
  rpc RepairPlayer ( RepairPlayerRequest ) returns ( RepairPlayerResponse );
  rpc GetCurrentGeneration ( GetCurrentGenerationRequest ) returns ( GetCurrentGenerationResponse );
}

message CreatePlayerRequest {
  external.common.command.v1.CommandArguments arguments = 1;
  repeated Body creates = 2;

  message Body {
    uint64 player_id = 1;
    uint32 account_id = 2;
    string name = 3;
    external.common.types.v1.CharacterCustomization character_customizations = 7;
  }
}

message CreatePlayerResponse {}

message DeletePlayerRequest {
  external.common.command.v1.CommandArguments arguments = 1;
  repeated Body deletes = 2;

  message Body {
    uint64 player_id = 1;
    bool all_owned_entities = 2;
  }
}

message DeletePlayerResponse {}

message CreateEntityRequest {
  external.common.command.v1.CommandArguments arguments = 1;
  repeated Body creates = 2;
  external.services.entitygraph.v1.Purpose purpose = 3;

  message Body {
    string entity_class_guid = 1;
    uint64 owner_id = 2;
    uint32 stack_size = 3;
    string parent_urn = 5;
    external.common.game.v1.Game game = 6;
    NewEntityOwnershipType ownership_type = 7;
    string target_inventory = 8;
    external.services.entitlement.v1.NewEntityConfiguration entity_config = 9;
  }
}

message CreateEntityResponse {}

message CreateFromEntitlementsRequest {
  external.common.command.v1.CommandArguments arguments = 1;
  repeated Body fulfills = 2;
  external.services.entitygraph.v1.Purpose purpose = 3;

  message Body {
    external.services.entitlement.v1.Entitlement entitlement = 1;
    string target_inventory = 2;
  }
}

message CreateFromEntitlementsResponse {}

message CheckMissingEntityClassRequest {
  repeated string entity_class_guid = 1;
}

message CheckMissingEntityClassResponse {
  repeated string invalid_entity_class_guid = 1;
}

message RepairPlayerRequest {
  external.common.command.v1.CommandArguments arguments = 1;
  uint64 player_id = 2;
  Strategy strategy = 3;

  enum Strategy {
    STRATEGY_UNSPECIFIED = 0;
    STRATEGY_FORCE_STOW = 1;
    STRATEGY_REPAIR = 2;
  }
}

message RepairPlayerResponse {}

message GetCurrentGenerationRequest {}

message GetCurrentGenerationResponse {
  string generation = 1;
}


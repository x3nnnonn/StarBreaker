syntax = "proto3";

package sc.internal.services.configuration.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "sc/external/services/configuration/v1/matchers.proto";

service ConfigAdminService {
  rpc WriteConfig ( WriteConfigRequest ) returns ( WriteConfigResponse );
  rpc UpdateConfig ( UpdateConfigRequest ) returns ( UpdateConfigResponse );
  rpc DeleteConfig ( DeleteConfigRequest ) returns ( DeleteConfigResponse );
  rpc QueryAllConfigurations ( QueryAllConfigurationsRequest ) returns ( QueryAllConfigurationsResponse );
  rpc QueryConfigurationNodeHistory ( QueryConfigurationNodeHistoryRequest ) returns ( QueryConfigurationNodeHistoryResponse );
  rpc QueryAllConfigurationsByGroup ( QueryAllConfigurationsByGroupRequest ) returns ( QueryAllConfigurationsByGroupResponse );
}

message WriteConfigMatchers {
  string environment = 1;
  string session_uuid = 2;
  string host_uuid = 3;
  string product = 4;
  string branch = 5;
  string build_cl = 6;
  float probability = 7;
}

message WriteRequest {
  string config_group = 1;
  string config_key = 2;
  string value = 3;
  WriteConfigMatchers matchers = 4;
}

message WriteResponse {
  string curr_node = 1;
  uint64 curr_version = 2;
}

message WriteConfigRequest {
  WriteRequest request = 1;
}

message WriteConfigResponse {
  WriteResponse response = 1;
}

message UpdateRequest {
  string curr_node = 1;
  uint64 curr_version = 2;
  string value = 3;
}

message UpdateResponse {
  string curr_node = 1;
  uint64 curr_version = 2;
}

message UpdateConfigRequest {
  UpdateRequest request = 1;
}

message UpdateConfigResponse {
  UpdateResponse response = 1;
}

message DeleteRequest {
  string curr_node = 1;
  uint64 curr_version = 2;
}

message DeleteResponse {}

message DeleteConfigRequest {
  DeleteRequest request = 1;
}

message DeleteConfigResponse {
  DeleteResponse response = 1;
}

message QueryAllConfigurationsRequestBody {
  string config_group = 1;
  string config_key = 2;
  external.services.configuration.v1.ConfigMatchers matchers = 5;
}

message QueryAllConfigurationMatch {
  string curr_node = 1;
  uint64 curr_version = 2;
  string value = 3;
}

message QueryAllConfigurationsResponseBody {
  repeated QueryAllConfigurationMatch matches = 1;
}

message QueryAllConfigurationsRequest {
  QueryAllConfigurationsRequestBody query = 1;
}

message QueryAllConfigurationsResponse {
  QueryAllConfigurationsResponseBody response = 1;
}

message QueryConfigurationNodeHistoryRequestBody {
  string node = 1;
}

message QueryConfigurationNodeHistoryVersion {
  string value = 1;
  uint64 version = 2;
}

message QueryConfigurationNodeHistoryResponseBody {
  repeated QueryConfigurationNodeHistoryVersion versions = 1;
}

message QueryConfigurationNodeHistoryRequest {
  QueryConfigurationNodeHistoryRequestBody query = 1;
}

message QueryConfigurationNodeHistoryResponse {
  QueryConfigurationNodeHistoryResponseBody response = 1;
}

message QueryAllConfigurationsByGroupRequestBody {
  repeated string config_groups = 1;
}

message QueryAllConfigurationsByGroupMatch {
  string curr_node = 1;
  uint64 curr_version = 2;
  string value = 3;
  external.services.configuration.v1.ConfigMatchers matchers = 4;
}

message QueryAllConfigurationsByGroupRequest {
  QueryAllConfigurationsByGroupRequestBody query = 1;
}

message QueryAllConfigurationsByGroupResponse {
  map<string, QueryAllConfigurationsByGroupResponseBody> response = 1;

  message QueryAllConfigurationsByGroupResponseBody {
    map<string, QueryAllConfigurationsByGroupResponseBodyGroup> variables = 1;

    message QueryAllConfigurationsByGroupResponseBodyGroup {
      repeated QueryAllConfigurationsByGroupMatch matches = 1;
    }
  }
}


syntax = "proto3";

package sc.internal.services.reputation.v1;

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "sc/external/common/api/v1/pagination.proto";
import "sc/external/common/api/v1/query.proto";
import "sc/external/services/reputation/v1/types.proto";

service ReputationService {
  rpc Vary ( VaryRequest ) returns ( VaryResponse );
  rpc Set ( SetRequest ) returns ( SetResponse );
  rpc Reset ( ResetRequest ) returns ( ResetResponse );
  rpc Copy ( CopyRequest ) returns ( CopyResponse );
  rpc MGet ( MGetRequest ) returns ( MGetResponse );
  rpc GetByIds ( GetByIdsRequest ) returns ( GetByIdsResponse );
  rpc Query ( QueryRequest ) returns ( QueryResponse );
  rpc QueryHistory ( QueryHistoryRequest ) returns ( QueryHistoryResponse );
  rpc GetScoreHistory ( GetScoreHistoryRequest ) returns ( GetScoreHistoryResponse );
  rpc Lock ( LockRequest ) returns ( LockResponse );
  rpc Unlock ( UnlockRequest ) returns ( UnlockResponse );
  rpc CreateStandings ( CreateStandingsRequest ) returns ( CreateStandingsResponse );
  rpc ChangeStandings ( ChangeStandingsRequest ) returns ( ChangeStandingsResponse );
  rpc DeleteStandings ( DeleteStandingsRequest ) returns ( DeleteStandingsResponse );
  rpc ListStandings ( ListStandingsRequest ) returns ( ListStandingsResponse );
  rpc GetStandings ( GetStandingsRequest ) returns ( GetStandingsResponse );
  rpc GetStandingsByName ( GetStandingsByNameRequest ) returns ( GetStandingsByNameResponse );
  rpc GetState ( GetStateRequest ) returns ( GetStateResponse );
  rpc SetState ( SetStateRequest ) returns ( SetStateResponse );
}

message VaryRequest {
  repeated VaryReputation reputations = 1;

  message VaryReputation {
    string subject = 1;
    string entity = 2;
    string scope = 3;
    string standings_id = 4;
    uint32 amount = 5;
    VaryAction action = 6;
    external.services.reputation.v1.LogContext log_context = 7;

    enum VaryAction {
      VARY_ACTION_INVALID_UNSPECIFIED = 0;
      VARY_ACTION_INCREASED = 1;
      VARY_ACTION_DECREASED = 2;
    }
  }
}

message VaryResponse {
  repeated external.services.reputation.v1.ReputationInitialized reputations = 1;
}

message SetRequest {
  repeated SetReputation reputations = 1;

  message SetReputation {
    string subject = 1;
    string entity = 2;
    string scope = 3;
    string standings_id = 4;
    uint32 amount = 5;
    external.services.reputation.v1.LogContext log_context = 6;
    external.services.reputation.v1.ReputationLock lock = 7;
  }
}

message SetResponse {
  repeated external.services.reputation.v1.ReputationInitialized reputations = 1;
}

message ResetRequest {
  repeated ResetReputation reputations = 1;

  message ResetReputation {
    string subject = 1;
    string entity = 2;
    string scope = 3;
    string standings_id = 4;
    external.services.reputation.v1.ReputationLock lock = 5;
    external.services.reputation.v1.LogContext log_context = 6;
  }
}

message ResetResponse {}

message CopyRequest {
  string from_subject = 1;
  string to_subject = 2;
}

message CopyResponse {}

message MGetRequest {
  repeated ReputationMGet reputations = 1;

  message ReputationMGet {
    string subject = 1;
    string entity = 2;
    string scope = 3;
  }
}

message MGetResponse {
  repeated external.services.reputation.v1.VersionedReputation reputations = 1;
}

message GetByIdsRequest {
  repeated string reputation_ids = 1;
}

message GetByIdsResponse {
  repeated external.services.reputation.v1.VersionedReputation reputations = 1;
}

message QueryRequest {
  external.common.api.v1.Query query = 4;
}

message QueryResponse {
  repeated external.services.reputation.v1.Reputation results = 1;
  external.common.api.v1.PaginationInfo page_info = 2;
}

message LockRequest {
  string id = 1;
  uint32 min = 2;
  uint32 max = 3;
}

message LockResponse {}

message UnlockRequest {
  string id = 1;
}

message UnlockResponse {}

message QueryHistoryRequest {
  external.common.api.v1.Query query = 4;
}

message QueryHistoryResponse {
  repeated external.services.reputation.v1.ReputationHistory results = 1;
  external.common.api.v1.PaginationInfo page_info = 2;
}

message CreateStandingsRequest {
  string name = 1;
  int32 initial = 2;
  int32 ceiling = 3;
  repeated external.services.reputation.v1.Standing standings = 4;
}

message CreateStandingsResponse {
  external.services.reputation.v1.Standings standings = 1;
}

message ChangeStandingsRequest {
  string id = 1;
  string name = 2;
  int32 initial = 3;
  int32 ceiling = 4;
  repeated external.services.reputation.v1.Standing standings = 5;
}

message ChangeStandingsResponse {
  external.services.reputation.v1.Standings standings = 1;
}

message DeleteStandingsRequest {
  string id = 1;
}

message DeleteStandingsResponse {}

message ListStandingsRequest {}

message ListStandingsResponse {
  repeated external.services.reputation.v1.Standings standings = 1;
}

message GetStandingsRequest {
  string id = 1;
}

message GetStandingsResponse {
  external.services.reputation.v1.Standings standings = 1;
}

message GetStandingsByNameRequest {
  string name = 1;
}

message GetStandingsByNameResponse {
  repeated external.services.reputation.v1.Standings standings = 1;
}

message GetStateRequest {
  repeated SubjectEntity subjects_entities = 1;

  message SubjectEntity {
    string subject = 1;
    string entity = 2;
  }
}

message GetStateResponse {
  repeated external.services.reputation.v1.State states = 1;
}

message SetStateRequest {
  repeated SubjectEntityState subjects = 1;

  message SubjectEntityState {
    string subject = 1;
    string entity = 2;
    StateValuePairs pairs = 3;
    string message = 4;

    message StateValuePairs {
      map<string, string> key_value = 1;

    }
  }
}

message SetStateResponse {}

message GetScoreHistoryRequest {
  repeated ScoreHistory reputation_scores = 1;

  message ScoreHistory {
    string reputation_id = 1;
    uint32 days = 2;
  }
}

message GetScoreHistoryResponse {
  repeated ScoresHistory reputation_scores = 1;

  message ScoresHistory {
    string reputation_id = 1;
    repeated Score scores = 2;

    message Score {
      uint64 score = 1;
      uint32 timestamp = 2;
    }
  }
}


syntax = "proto3";

package sc.internal.services.mission_factory.v1;

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "sc/external/common/mission/v1/missions.proto";
import "sc/external/common/mission/v1/types.proto";

service MissionFactoryService {
  rpc CreateMission ( CreateMissionRequest ) returns ( CreateMissionResponse );
  rpc ActivateMission ( ActivateMissionRequest ) returns ( ActivateMissionResponse );
  rpc AdvanceMission ( AdvanceMissionRequest ) returns ( AdvanceMissionResponse );
}

message CreateMissionRequest {
  string mission_id = 1;
  string contract_id = 2;
  external.common.mission.v1.MissionTemplate mission_template = 3;
  repeated string reserved_location_urns = 4;
  string ess_group_urn = 5;
}

message CreateMissionResponse {
  repeated Phase phases = 1;
  .google.protobuf.Timestamp expiry = 2;
  bool activate_mission = 3;

  message Phase {
    string mission_phase_guid = 1;
    .google.protobuf.Timestamp expiry = 2;
    string autocomplete_objective_id = 3;
    external.common.mission.v1.MissionPhaseData data = 4;
  }
}

message ActivateMissionRequest {
  external.common.mission.v1.ActiveMission mission = 1;
}

message ActivateMissionResponse {}

message AdvanceMissionRequest {
  external.common.mission.v1.ActiveMission mission = 1;
}

message AdvanceMissionResponse {}

